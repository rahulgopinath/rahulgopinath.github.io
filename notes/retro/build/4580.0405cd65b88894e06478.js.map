{"version":3,"file":"4580.0405cd65b88894e06478.js","mappings":"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","sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../../node_modules/@jupyterlab/statusbar/lib/style/layout.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../../node_modules/@jupyterlab/statusbar/lib/components/group.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../../node_modules/@jupyterlab/statusbar/lib/style/variables.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../../node_modules/@jupyterlab/statusbar/lib/style/text.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../../node_modules/@jupyterlab/statusbar/lib/style/statusbar.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../../node_modules/@jupyterlab/statusbar/lib/components/hover.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../../node_modules/@jupyterlab/statusbar/lib/style/progressBar.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../../node_modules/@jupyterlab/statusbar/lib/components/progressBar.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../../node_modules/@jupyterlab/statusbar/lib/components/text.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../../node_modules/@jupyterlab/statusbar/lib/defaults/kernelStatus.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../../node_modules/@jupyterlab/statusbar/lib/style/lineForm.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../../node_modules/@jupyterlab/statusbar/lib/defaults/lineCol.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../../node_modules/@jupyterlab/statusbar/lib/defaults/runningSessions.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../../node_modules/@jupyterlab/statusbar/lib/statusbar.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../../node_modules/@jupyterlab/statusbar/lib/tokens.js"],"sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nexport const centeredFlex = {\n    display: 'flex',\n    alignItems: 'center'\n};\nexport const leftToRight = {\n    flexDirection: 'row'\n};\nexport const rightToLeft = {\n    flexDirection: 'row-reverse'\n};\nexport const equiDistant = {\n    justifyContent: 'space-between'\n};\n//# sourceMappingURL=layout.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { classes, style } from 'typestyle/lib';\nimport { centeredFlex, leftToRight } from '../style/layout';\nconst groupItemLayout = style(centeredFlex, leftToRight);\n/**\n * A tsx component for a set of items logically grouped together.\n */\nexport function GroupItem(props) {\n    const { spacing, children, className } = props, rest = __rest(props, [\"spacing\", \"children\", \"className\"]);\n    const numChildren = React.Children.count(children);\n    return (React.createElement(\"div\", Object.assign({ className: classes(groupItemLayout, className) }, rest), React.Children.map(children, (child, i) => {\n        if (i === 0) {\n            return React.createElement(\"div\", { style: { marginRight: `${spacing}px` } }, child);\n        }\n        else if (i === numChildren - 1) {\n            return React.createElement(\"div\", { style: { marginLeft: `${spacing}px` } }, child);\n        }\n        else {\n            return React.createElement(\"div\", { style: { margin: `0px ${spacing}px` } }, child);\n        }\n    })));\n}\n//# sourceMappingURL=group.js.map","export default {\n    hoverColor: 'var(--jp-layout-color3)',\n    clickColor: 'var(--jp-brand-color1)',\n    backgroundColor: 'var(--jp-layout-color2)',\n    height: 'var(--jp-statusbar-height)',\n    fontSize: 'var(--jp-ui-font-size1)',\n    fontFamily: 'var(--jp-ui-font-family)',\n    textColor: 'var(--jp-ui-font-color1)',\n    textClickColor: 'white',\n    itemMargin: '2px',\n    itemPadding: '6px',\n    statusBarPadding: '10px',\n    interItemHalfSpacing: '2px',\n    whiteSpace: 'nowrap',\n    textOverflow: 'ellipsis'\n};\n//# sourceMappingURL=variables.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { style } from 'typestyle/lib';\nimport vars from './variables';\nexport const baseText = {\n    fontSize: vars.fontSize,\n    fontFamily: vars.fontFamily\n};\nexport const textItem = style(baseText, {\n    lineHeight: '24px',\n    color: vars.textColor\n});\n//# sourceMappingURL=text.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { style } from 'typestyle/lib';\nimport { centeredFlex, leftToRight, rightToLeft } from './layout';\nimport { textItem } from './text';\nimport vars from './variables';\nconst itemPadding = {\n    paddingLeft: vars.itemPadding,\n    paddingRight: vars.itemPadding\n};\nconst interactiveHover = {\n    $nest: {\n        '&:hover': {\n            backgroundColor: vars.hoverColor\n        }\n    }\n};\nconst clicked = {\n    backgroundColor: vars.clickColor,\n    $nest: {\n        ['.' + textItem]: {\n            color: vars.textClickColor\n        }\n    }\n};\nexport const statusBar = style({\n    background: vars.backgroundColor,\n    minHeight: vars.height,\n    justifyContent: 'space-between',\n    paddingLeft: vars.statusBarPadding,\n    paddingRight: vars.statusBarPadding\n}, centeredFlex);\nexport const side = style(centeredFlex);\nexport const leftSide = style(leftToRight);\nexport const rightSide = style(rightToLeft);\nexport const item = style({\n    maxHeight: vars.height,\n    marginLeft: vars.itemMargin,\n    marginRight: vars.itemMargin,\n    height: vars.height,\n    whiteSpace: vars.whiteSpace,\n    textOverflow: vars.textOverflow,\n    color: vars.textColor\n}, itemPadding);\nexport const clickedItem = style(clicked);\nexport const interactiveItem = style(interactiveHover);\n//# sourceMappingURL=statusbar.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { HoverBox } from '@jupyterlab/apputils';\nimport { PanelLayout, Widget } from '@lumino/widgets';\nimport { style } from 'typestyle/lib';\nimport { clickedItem, interactiveItem } from '../style/statusbar';\nconst hoverItem = style({\n    boxShadow: '0px 4px 4px rgba(0, 0, 0, 0.25)'\n});\n/**\n * Create and show a popup component.\n *\n * @param options - options for the popup\n *\n * @returns the popup that was created.\n */\nexport function showPopup(options) {\n    const dialog = new Popup(options);\n    dialog.launch();\n    return dialog;\n}\n/**\n * A class for a Popup widget.\n */\nexport class Popup extends Widget {\n    /**\n     * Construct a new Popup.\n     */\n    constructor(options) {\n        super();\n        this._body = options.body;\n        this._body.addClass(hoverItem);\n        this._anchor = options.anchor;\n        this._align = options.align;\n        const layout = (this.layout = new PanelLayout());\n        layout.addWidget(options.body);\n        this._body.node.addEventListener('resize', () => {\n            this.update();\n        });\n    }\n    /**\n     * Attach the popup widget to the page.\n     */\n    launch() {\n        this._setGeometry();\n        Widget.attach(this, document.body);\n        this.update();\n        this._anchor.addClass(clickedItem);\n        this._anchor.removeClass(interactiveItem);\n    }\n    /**\n     * Handle `'update'` messages for the widget.\n     */\n    onUpdateRequest(msg) {\n        this._setGeometry();\n        super.onUpdateRequest(msg);\n    }\n    /**\n     * Handle `'after-attach'` messages for the widget.\n     */\n    onAfterAttach(msg) {\n        document.addEventListener('click', this, false);\n        this.node.addEventListener('keydown', this, false);\n        window.addEventListener('resize', this, false);\n    }\n    /**\n     * Handle `'after-detach'` messages for the widget.\n     */\n    onAfterDetach(msg) {\n        document.removeEventListener('click', this, false);\n        this.node.removeEventListener('keydown', this, false);\n        window.removeEventListener('resize', this, false);\n    }\n    /**\n     * Handle `'resize'` messages for the widget.\n     */\n    onResize() {\n        this.update();\n    }\n    /**\n     * Dispose of the widget.\n     */\n    dispose() {\n        super.dispose();\n        this._anchor.removeClass(clickedItem);\n        this._anchor.addClass(interactiveItem);\n    }\n    /**\n     * Handle DOM events for the widget.\n     */\n    handleEvent(event) {\n        switch (event.type) {\n            case 'keydown':\n                this._evtKeydown(event);\n                break;\n            case 'click':\n                this._evtClick(event);\n                break;\n            case 'resize':\n                this.onResize();\n                break;\n            default:\n                break;\n        }\n    }\n    _evtClick(event) {\n        if (!!event.target &&\n            !(this._body.node.contains(event.target) ||\n                this._anchor.node.contains(event.target))) {\n            this.dispose();\n        }\n    }\n    _evtKeydown(event) {\n        // Check for escape key\n        switch (event.keyCode) {\n            case 27: // Escape.\n                event.stopPropagation();\n                event.preventDefault();\n                this.dispose();\n                break;\n            default:\n                break;\n        }\n    }\n    _setGeometry() {\n        let aligned = 0;\n        const anchorRect = this._anchor.node.getBoundingClientRect();\n        const bodyRect = this._body.node.getBoundingClientRect();\n        if (this._align === 'right') {\n            aligned = -(bodyRect.width - anchorRect.width);\n        }\n        const style = window.getComputedStyle(this._body.node);\n        HoverBox.setGeometry({\n            anchor: anchorRect,\n            host: document.body,\n            maxHeight: 500,\n            minHeight: 20,\n            node: this._body.node,\n            offset: {\n                horizontal: aligned\n            },\n            privilege: 'forceAbove',\n            style\n        });\n    }\n}\n//# sourceMappingURL=hover.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { style } from 'typestyle/lib';\nexport const progressBarItem = style({\n    background: 'black',\n    height: '10px',\n    width: '100px',\n    border: '1px solid black',\n    borderRadius: '3px',\n    marginLeft: '4px',\n    overflow: 'hidden'\n});\nexport const fillerItem = style({\n    background: 'var(--jp-brand-color2)',\n    height: '10px'\n});\n//# sourceMappingURL=progressBar.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport * as React from 'react';\nimport { fillerItem, progressBarItem } from '../style/progressBar';\n/**\n * A functional tsx component for a progress bar.\n */\nexport function ProgressBar(props) {\n    return (React.createElement(\"div\", { className: progressBarItem },\n        React.createElement(Filler, { percentage: props.percentage })));\n}\n/**\n * A functional tsx component for a partially filled div.\n */\nfunction Filler(props) {\n    return (React.createElement(\"div\", { className: fillerItem, style: {\n            width: `${props.percentage}px`\n        } }));\n}\n//# sourceMappingURL=progressBar.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { classes } from 'typestyle/lib';\nimport { textItem } from '../style/text';\n/**\n * A functional tsx component for a text item.\n */\nexport function TextItem(props) {\n    const { title, source, className } = props, rest = __rest(props, [\"title\", \"source\", \"className\"]);\n    return (React.createElement(\"span\", Object.assign({ className: classes(textItem, className), title: title }, rest), source));\n}\n//# sourceMappingURL=text.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { VDomModel, VDomRenderer } from '@jupyterlab/apputils';\nimport { nullTranslator } from '@jupyterlab/translation';\nimport { JSONExt } from '@lumino/coreutils';\nimport React from 'react';\nimport { interactiveItem, TextItem } from '..';\n/**\n * A pure functional component for rendering kernel status.\n */\nfunction KernelStatusComponent(props) {\n    const translator = props.translator || nullTranslator;\n    const trans = translator.load('jupyterlab');\n    let statusText = '';\n    if (props.status) {\n        statusText = ` | ${props.status}`;\n    }\n    return (React.createElement(TextItem, { onClick: props.handleClick, source: `${props.kernelName}${statusText}`, title: trans.__('Change kernel for %1', props.activityName) }));\n}\n/**\n * A VDomRenderer widget for displaying the status of a kernel.\n */\nexport class KernelStatus extends VDomRenderer {\n    /**\n     * Construct the kernel status widget.\n     */\n    constructor(opts, translator) {\n        super(new KernelStatus.Model(translator));\n        this.translator = translator || nullTranslator;\n        this._handleClick = opts.onClick;\n        this.addClass(interactiveItem);\n    }\n    /**\n     * Render the kernel status item.\n     */\n    render() {\n        if (this.model === null) {\n            return null;\n        }\n        else {\n            return (React.createElement(KernelStatusComponent, { status: this.model.status, kernelName: this.model.kernelName, activityName: this.model.activityName, handleClick: this._handleClick, translator: this.translator }));\n        }\n    }\n}\n/**\n * A namespace for KernelStatus statics.\n */\n(function (KernelStatus) {\n    /**\n     * A VDomModel for the kernel status indicator.\n     */\n    class Model extends VDomModel {\n        constructor(translator) {\n            super();\n            /**\n             * React to changes to the kernel status.\n             */\n            this._onKernelStatusChanged = () => {\n                var _a;\n                this._kernelStatus = (_a = this._sessionContext) === null || _a === void 0 ? void 0 : _a.kernelDisplayStatus;\n                this.stateChanged.emit(void 0);\n            };\n            /**\n             * React to changes in the kernel.\n             */\n            this._onKernelChanged = (_sessionContext, change) => {\n                var _a;\n                const oldState = this._getAllState();\n                // sync setting of status and display name\n                this._kernelStatus = (_a = this._sessionContext) === null || _a === void 0 ? void 0 : _a.kernelDisplayStatus;\n                this._kernelName = _sessionContext.kernelDisplayName;\n                this._triggerChange(oldState, this._getAllState());\n            };\n            this._activityName = 'activity'; // FIXME-TRANS:?\n            this._kernelStatus = '';\n            this._sessionContext = null;\n            translator = translator || nullTranslator;\n            this._trans = translator.load('jupyterlab');\n            this._kernelName = this._trans.__('No Kernel!');\n            // TODO-FIXME: this mapping is duplicated in apputils/toolbar.tsx\n            this._statusNames = {\n                unknown: this._trans.__('Unknown'),\n                starting: this._trans.__('Starting'),\n                idle: this._trans.__('Idle'),\n                busy: this._trans.__('Busy'),\n                terminating: this._trans.__('Terminating'),\n                restarting: this._trans.__('Restarting'),\n                autorestarting: this._trans.__('Autorestarting'),\n                dead: this._trans.__('Dead'),\n                connected: this._trans.__('Connected'),\n                connecting: this._trans.__('Connecting'),\n                disconnected: this._trans.__('Disconnected'),\n                initializing: this._trans.__('Initializing'),\n                '': ''\n            };\n        }\n        /**\n         * The name of the kernel.\n         */\n        get kernelName() {\n            return this._kernelName;\n        }\n        /**\n         * The current status of the kernel.\n         */\n        get status() {\n            return this._kernelStatus\n                ? this._statusNames[this._kernelStatus]\n                : undefined;\n        }\n        /**\n         * A display name for the activity.\n         */\n        get activityName() {\n            return this._activityName;\n        }\n        set activityName(val) {\n            const oldVal = this._activityName;\n            if (oldVal === val) {\n                return;\n            }\n            this._activityName = val;\n            this.stateChanged.emit(void 0);\n        }\n        /**\n         * The current client session associated with the kernel status indicator.\n         */\n        get sessionContext() {\n            return this._sessionContext;\n        }\n        set sessionContext(sessionContext) {\n            var _a, _b, _c;\n            (_a = this._sessionContext) === null || _a === void 0 ? void 0 : _a.statusChanged.disconnect(this._onKernelStatusChanged);\n            (_b = this._sessionContext) === null || _b === void 0 ? void 0 : _b.kernelChanged.disconnect(this._onKernelChanged);\n            const oldState = this._getAllState();\n            this._sessionContext = sessionContext;\n            this._kernelStatus = sessionContext === null || sessionContext === void 0 ? void 0 : sessionContext.kernelDisplayStatus;\n            this._kernelName = (_c = sessionContext === null || sessionContext === void 0 ? void 0 : sessionContext.kernelDisplayName) !== null && _c !== void 0 ? _c : this._trans.__('No Kernel');\n            sessionContext === null || sessionContext === void 0 ? void 0 : sessionContext.statusChanged.connect(this._onKernelStatusChanged, this);\n            sessionContext === null || sessionContext === void 0 ? void 0 : sessionContext.connectionStatusChanged.connect(this._onKernelStatusChanged, this);\n            sessionContext === null || sessionContext === void 0 ? void 0 : sessionContext.kernelChanged.connect(this._onKernelChanged, this);\n            this._triggerChange(oldState, this._getAllState());\n        }\n        _getAllState() {\n            return [this._kernelName, this._kernelStatus, this._activityName];\n        }\n        _triggerChange(oldState, newState) {\n            if (JSONExt.deepEqual(oldState, newState)) {\n                this.stateChanged.emit(void 0);\n            }\n        }\n    }\n    KernelStatus.Model = Model;\n})(KernelStatus || (KernelStatus = {}));\n//# sourceMappingURL=kernelStatus.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { style } from 'typestyle/lib';\nexport const hoverItem = style({\n    boxShadow: '0px 4px 4px rgba(0, 0, 0, 0.25)'\n});\nexport const lineFormSearch = style({\n    padding: '4px 12px',\n    backgroundColor: 'var(--jp-layout-color2)',\n    boxShadow: 'var(--jp-toolbar-box-shadow)',\n    zIndex: 2,\n    fontSize: 'var(--jp-ui-font-size1)'\n});\nexport const lineFormCaption = style({\n    fontSize: 'var(--jp-ui-font-size0)',\n    lineHeight: 'var(--jp-ui-font-size1)',\n    marginTop: '4px',\n    color: 'var(--jp-ui-font-color0)'\n});\nexport const baseLineForm = {\n    border: 'none',\n    borderRadius: '0px',\n    position: 'absolute',\n    backgroundSize: '16px',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center',\n    outline: 'none',\n    top: '0px',\n    right: '0px'\n};\nexport const lineFormButtonDiv = style(baseLineForm, {\n    top: '4px',\n    right: '8px',\n    height: '24px',\n    padding: '0px 12px',\n    width: '12px'\n});\nexport const lineFormButtonIcon = style(baseLineForm, {\n    backgroundColor: 'var(--jp-brand-color1)',\n    height: '100%',\n    width: '100%',\n    boxSizing: 'border-box',\n    padding: '4px 6px'\n});\nexport const lineFormButton = style(baseLineForm, {\n    backgroundColor: 'transparent',\n    height: '100%',\n    width: '100%',\n    boxSizing: 'border-box'\n});\nexport const lineFormWrapper = style({\n    overflow: 'hidden',\n    padding: '0px 8px',\n    border: '1px solid var(--jp-border-color0)',\n    backgroundColor: 'var(--jp-input-active-background)',\n    height: '22px'\n});\nexport const lineFormWrapperFocusWithin = style({\n    border: 'var(--jp-border-width) solid var(--md-blue-500)',\n    boxShadow: 'inset 0 0 4px var(--md-blue-300)'\n});\nexport const lineFormInput = style({\n    background: 'transparent',\n    width: '200px',\n    height: '100%',\n    border: 'none',\n    outline: 'none',\n    color: 'var(--jp-ui-font-color0)',\n    lineHeight: '28px'\n});\n//# sourceMappingURL=lineForm.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { ReactWidget, VDomModel, VDomRenderer } from '@jupyterlab/apputils';\nimport { nullTranslator } from '@jupyterlab/translation';\nimport { lineFormIcon } from '@jupyterlab/ui-components';\nimport React from 'react';\nimport { classes } from 'typestyle/lib';\nimport { interactiveItem, showPopup, TextItem } from '..';\nimport { lineFormButton, lineFormButtonDiv, lineFormButtonIcon, lineFormCaption, lineFormInput, lineFormSearch, lineFormWrapper, lineFormWrapperFocusWithin } from '../style/lineForm';\n/**\n * A component for rendering a \"go-to-line\" form.\n */\nclass LineFormComponent extends React.Component {\n    /**\n     * Construct a new LineFormComponent.\n     */\n    constructor(props) {\n        super(props);\n        /**\n         * Handle a change to the value in the input field.\n         */\n        this._handleChange = (event) => {\n            this.setState({ value: event.currentTarget.value });\n        };\n        /**\n         * Handle submission of the input field.\n         */\n        this._handleSubmit = (event) => {\n            event.preventDefault();\n            const value = parseInt(this._textInput.value, 10);\n            if (!isNaN(value) &&\n                isFinite(value) &&\n                1 <= value &&\n                value <= this.props.maxLine) {\n                this.props.handleSubmit(value);\n            }\n            return false;\n        };\n        /**\n         * Handle focusing of the input field.\n         */\n        this._handleFocus = () => {\n            this.setState({ hasFocus: true });\n        };\n        /**\n         * Handle blurring of the input field.\n         */\n        this._handleBlur = () => {\n            this.setState({ hasFocus: false });\n        };\n        this._textInput = null;\n        this.translator = props.translator || nullTranslator;\n        this._trans = this.translator.load('jupyterlab');\n        this.state = {\n            value: '',\n            hasFocus: false\n        };\n    }\n    /**\n     * Focus the element on mount.\n     */\n    componentDidMount() {\n        this._textInput.focus();\n    }\n    /**\n     * Render the LineFormComponent.\n     */\n    render() {\n        return (React.createElement(\"div\", { className: lineFormSearch },\n            React.createElement(\"form\", { name: \"lineColumnForm\", onSubmit: this._handleSubmit, noValidate: true },\n                React.createElement(\"div\", { className: classes(lineFormWrapper, 'lm-lineForm-wrapper', this.state.hasFocus ? lineFormWrapperFocusWithin : undefined) },\n                    React.createElement(\"input\", { type: \"text\", className: lineFormInput, onChange: this._handleChange, onFocus: this._handleFocus, onBlur: this._handleBlur, value: this.state.value, ref: input => {\n                            this._textInput = input;\n                        } }),\n                    React.createElement(\"div\", { className: lineFormButtonDiv },\n                        React.createElement(lineFormIcon.react, { className: lineFormButtonIcon, elementPosition: \"center\" }),\n                        React.createElement(\"input\", { type: \"submit\", className: lineFormButton, value: \"\" }))),\n                React.createElement(\"label\", { className: lineFormCaption }, this._trans.__('Go to line number between 1 and %1', this.props.maxLine)))));\n    }\n}\n/**\n * A pure functional component for rendering a line/column\n * status item.\n */\nfunction LineColComponent(props) {\n    const translator = props.translator || nullTranslator;\n    const trans = translator.load('jupyterlab');\n    return (React.createElement(TextItem, { onClick: props.handleClick, source: trans.__('Ln %1, Col %2', props.line, props.column), title: trans.__('Go to line number…') }));\n}\n/**\n * A widget implementing a line/column status item.\n */\nexport class LineCol extends VDomRenderer {\n    /**\n     * Construct a new LineCol status item.\n     */\n    constructor(translator) {\n        super(new LineCol.Model());\n        this._popup = null;\n        this.addClass(interactiveItem);\n        this.translator = translator || nullTranslator;\n    }\n    /**\n     * Render the status item.\n     */\n    render() {\n        if (this.model === null) {\n            return null;\n        }\n        else {\n            return (React.createElement(LineColComponent, { line: this.model.line, column: this.model.column, translator: this.translator, handleClick: () => this._handleClick() }));\n        }\n    }\n    /**\n     * A click handler for the widget.\n     */\n    _handleClick() {\n        if (this._popup) {\n            this._popup.dispose();\n        }\n        const body = ReactWidget.create(React.createElement(LineFormComponent, { handleSubmit: val => this._handleSubmit(val), currentLine: this.model.line, maxLine: this.model.editor.lineCount, translator: this.translator }));\n        this._popup = showPopup({\n            body: body,\n            anchor: this,\n            align: 'right'\n        });\n    }\n    /**\n     * Handle submission for the widget.\n     */\n    _handleSubmit(value) {\n        this.model.editor.setCursorPosition({ line: value - 1, column: 0 });\n        this._popup.dispose();\n        this.model.editor.focus();\n    }\n}\n/**\n * A namespace for LineCol statics.\n */\n(function (LineCol) {\n    /**\n     * A VDom model for a status item tracking the line/column of an editor.\n     */\n    class Model extends VDomModel {\n        constructor() {\n            super(...arguments);\n            /**\n             * React to a change in the cursors of the current editor.\n             */\n            this._onSelectionChanged = () => {\n                const oldState = this._getAllState();\n                const pos = this.editor.getCursorPosition();\n                this._line = pos.line + 1;\n                this._column = pos.column + 1;\n                this._triggerChange(oldState, this._getAllState());\n            };\n            this._line = 1;\n            this._column = 1;\n            this._editor = null;\n        }\n        /**\n         * The current editor of the model.\n         */\n        get editor() {\n            return this._editor;\n        }\n        set editor(editor) {\n            const oldEditor = this._editor;\n            if (oldEditor) {\n                oldEditor.model.selections.changed.disconnect(this._onSelectionChanged);\n            }\n            const oldState = this._getAllState();\n            this._editor = editor;\n            if (!this._editor) {\n                this._column = 1;\n                this._line = 1;\n            }\n            else {\n                this._editor.model.selections.changed.connect(this._onSelectionChanged);\n                const pos = this._editor.getCursorPosition();\n                this._column = pos.column + 1;\n                this._line = pos.line + 1;\n            }\n            this._triggerChange(oldState, this._getAllState());\n        }\n        /**\n         * The current line of the model.\n         */\n        get line() {\n            return this._line;\n        }\n        /**\n         * The current column of the model.\n         */\n        get column() {\n            return this._column;\n        }\n        _getAllState() {\n            return [this._line, this._column];\n        }\n        _triggerChange(oldState, newState) {\n            if (oldState[0] !== newState[0] || oldState[1] !== newState[1]) {\n                this.stateChanged.emit(void 0);\n            }\n        }\n    }\n    LineCol.Model = Model;\n})(LineCol || (LineCol = {}));\n//# sourceMappingURL=lineCol.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { VDomModel, VDomRenderer } from '@jupyterlab/apputils';\nimport { nullTranslator } from '@jupyterlab/translation';\nimport { kernelIcon, terminalIcon } from '@jupyterlab/ui-components';\nimport React from 'react';\nimport { GroupItem, interactiveItem, TextItem } from '..';\n/**\n * Half spacing between subitems in a status item.\n */\nconst HALF_SPACING = 4;\n/**\n * A pure functional component for rendering kernel and terminal sessions.\n *\n * @param props: the props for the component.\n *\n * @returns a tsx component for the running sessions.\n */\nfunction RunningSessionsComponent(props) {\n    return (React.createElement(GroupItem, { spacing: HALF_SPACING, onClick: props.handleClick },\n        React.createElement(GroupItem, { spacing: HALF_SPACING },\n            React.createElement(TextItem, { source: props.terminals }),\n            React.createElement(terminalIcon.react, { left: '1px', top: '3px', stylesheet: 'statusBar' })),\n        React.createElement(GroupItem, { spacing: HALF_SPACING },\n            React.createElement(TextItem, { source: props.sessions }),\n            React.createElement(kernelIcon.react, { top: '2px', stylesheet: 'statusBar' }))));\n}\n/**\n * A VDomRenderer for a RunningSessions status item.\n */\nexport class RunningSessions extends VDomRenderer {\n    /**\n     * Create a new RunningSessions widget.\n     */\n    constructor(opts) {\n        super(new RunningSessions.Model());\n        this._serviceManager = opts.serviceManager;\n        this._handleClick = opts.onClick;\n        this.translator = opts.translator || nullTranslator;\n        this._trans = this.translator.load('jupyterload');\n        this._serviceManager.sessions.runningChanged.connect(this._onSessionsRunningChanged, this);\n        this._serviceManager.terminals.runningChanged.connect(this._onTerminalsRunningChanged, this);\n        this.addClass(interactiveItem);\n    }\n    /**\n     * Render the running sessions widget.\n     */\n    render() {\n        if (!this.model) {\n            return null;\n        }\n        // TODO-TRANS: Should probably be handled differently.\n        // This is more localizable friendly: \"Terminals: %1 | Kernels: %2\"\n        this.title.caption = this._trans.__('%1 Terminals, %2 Kernel sessions', this.model.terminals, this.model.sessions);\n        return (React.createElement(RunningSessionsComponent, { sessions: this.model.sessions, terminals: this.model.terminals, handleClick: this._handleClick }));\n    }\n    /**\n     * Dispose of the status item.\n     */\n    dispose() {\n        super.dispose();\n        this._serviceManager.sessions.runningChanged.disconnect(this._onSessionsRunningChanged, this);\n        this._serviceManager.terminals.runningChanged.disconnect(this._onTerminalsRunningChanged, this);\n    }\n    /**\n     * Set the number of kernel sessions when the list changes.\n     */\n    _onSessionsRunningChanged(manager, sessions) {\n        this.model.sessions = sessions.length;\n    }\n    /**\n     * Set the number of terminal sessions when the list changes.\n     */\n    _onTerminalsRunningChanged(manager, terminals) {\n        this.model.terminals = terminals.length;\n    }\n}\n/**\n * A namespace for RunningSessions statics.\n */\n(function (RunningSessions) {\n    /**\n     * A VDomModel for the RunningSessions status item.\n     */\n    class Model extends VDomModel {\n        constructor() {\n            super(...arguments);\n            this._terminals = 0;\n            this._sessions = 0;\n        }\n        /**\n         * The number of active kernel sessions.\n         */\n        get sessions() {\n            return this._sessions;\n        }\n        set sessions(sessions) {\n            const oldSessions = this._sessions;\n            this._sessions = sessions;\n            if (oldSessions !== this._sessions) {\n                this.stateChanged.emit(void 0);\n            }\n        }\n        /**\n         * The number of active terminal sessions.\n         */\n        get terminals() {\n            return this._terminals;\n        }\n        set terminals(terminals) {\n            const oldTerminals = this._terminals;\n            this._terminals = terminals;\n            if (oldTerminals !== this._terminals) {\n                this.stateChanged.emit(void 0);\n            }\n        }\n    }\n    RunningSessions.Model = Model;\n})(RunningSessions || (RunningSessions = {}));\n//# sourceMappingURL=runningSessions.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { ArrayExt } from '@lumino/algorithm';\nimport { DisposableDelegate, DisposableSet } from '@lumino/disposable';\nimport { Panel, PanelLayout, Widget } from '@lumino/widgets';\nimport { statusBar as barStyle, item as itemStyle, leftSide as leftSideStyle, rightSide as rightSideStyle, side as sideStyle } from './style/statusbar';\n/**\n * Main status bar object which contains all items.\n */\nexport class StatusBar extends Widget {\n    constructor() {\n        super();\n        this._leftRankItems = [];\n        this._rightRankItems = [];\n        this._statusItems = {};\n        this._disposables = new DisposableSet();\n        this.addClass(barStyle);\n        const rootLayout = (this.layout = new PanelLayout());\n        const leftPanel = (this._leftSide = new Panel());\n        const middlePanel = (this._middlePanel = new Panel());\n        const rightPanel = (this._rightSide = new Panel());\n        leftPanel.addClass(sideStyle);\n        leftPanel.addClass(leftSideStyle);\n        middlePanel.addClass(sideStyle);\n        rightPanel.addClass(sideStyle);\n        rightPanel.addClass(rightSideStyle);\n        rootLayout.addWidget(leftPanel);\n        rootLayout.addWidget(middlePanel);\n        rootLayout.addWidget(rightPanel);\n    }\n    /**\n     * Register a new status item.\n     *\n     * @param id - a unique id for the status item.\n     *\n     * @param statusItem - The item to add to the status bar.\n     */\n    registerStatusItem(id, statusItem) {\n        if (id in this._statusItems) {\n            throw new Error(`Status item ${id} already registered.`);\n        }\n        // Populate defaults for the optional properties of the status item.\n        const fullStatusItem = Object.assign(Object.assign({}, Private.statusItemDefaults), statusItem);\n        const { align, item, rank } = fullStatusItem;\n        // Connect the activeStateChanged signal to refreshing the status item,\n        // if the signal was provided.\n        const onActiveStateChanged = () => {\n            this._refreshItem(id);\n        };\n        if (fullStatusItem.activeStateChanged) {\n            fullStatusItem.activeStateChanged.connect(onActiveStateChanged);\n        }\n        const rankItem = { id, rank };\n        fullStatusItem.item.addClass(itemStyle);\n        this._statusItems[id] = fullStatusItem;\n        if (align === 'left') {\n            const insertIndex = this._findInsertIndex(this._leftRankItems, rankItem);\n            if (insertIndex === -1) {\n                this._leftSide.addWidget(item);\n                this._leftRankItems.push(rankItem);\n            }\n            else {\n                ArrayExt.insert(this._leftRankItems, insertIndex, rankItem);\n                this._leftSide.insertWidget(insertIndex, item);\n            }\n        }\n        else if (align === 'right') {\n            const insertIndex = this._findInsertIndex(this._rightRankItems, rankItem);\n            if (insertIndex === -1) {\n                this._rightSide.addWidget(item);\n                this._rightRankItems.push(rankItem);\n            }\n            else {\n                ArrayExt.insert(this._rightRankItems, insertIndex, rankItem);\n                this._rightSide.insertWidget(insertIndex, item);\n            }\n        }\n        else {\n            this._middlePanel.addWidget(item);\n        }\n        this._refreshItem(id); // Initially refresh the status item.\n        const disposable = new DisposableDelegate(() => {\n            delete this._statusItems[id];\n            if (fullStatusItem.activeStateChanged) {\n                fullStatusItem.activeStateChanged.disconnect(onActiveStateChanged);\n            }\n            item.parent = null;\n            item.dispose();\n        });\n        this._disposables.add(disposable);\n        return disposable;\n    }\n    /**\n     * Dispose of the status bar.\n     */\n    dispose() {\n        this._leftRankItems.length = 0;\n        this._rightRankItems.length = 0;\n        this._disposables.dispose();\n        super.dispose();\n    }\n    /**\n     * Handle an 'update-request' message to the status bar.\n     */\n    onUpdateRequest(msg) {\n        this._refreshAll();\n        super.onUpdateRequest(msg);\n    }\n    _findInsertIndex(side, newItem) {\n        return ArrayExt.findFirstIndex(side, item => item.rank > newItem.rank);\n    }\n    _refreshItem(id) {\n        const statusItem = this._statusItems[id];\n        if (statusItem.isActive()) {\n            statusItem.item.show();\n            statusItem.item.update();\n        }\n        else {\n            statusItem.item.hide();\n        }\n    }\n    _refreshAll() {\n        Object.keys(this._statusItems).forEach(id => {\n            this._refreshItem(id);\n        });\n    }\n}\n/**\n * A namespace for private functionality.\n */\nvar Private;\n(function (Private) {\n    /**\n     * Default options for a status item, less the item itself.\n     */\n    Private.statusItemDefaults = {\n        align: 'left',\n        rank: 0,\n        isActive: () => true,\n        activeStateChanged: undefined\n    };\n})(Private || (Private = {}));\n//# sourceMappingURL=statusbar.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { Token } from '@lumino/coreutils';\n// tslint:disable-next-line:variable-name\nexport const IStatusBar = new Token('@jupyterlab/statusbar:IStatusBar');\n//# sourceMappingURL=tokens.js.map"],"names":["centeredFlex","display","alignItems","leftToRight","flexDirection","groupItemLayout","GroupItem","props","spacing","children","className","rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","__rest","numChildren","assign","child","style","marginRight","marginLeft","margin","textItem","fontSize","fontFamily","lineHeight","color","itemPadding","paddingLeft","paddingRight","interactiveHover","$nest","backgroundColor","clicked","statusBar","background","minHeight","justifyContent","side","leftSide","rightSide","maxHeight","height","whiteSpace","textOverflow","clickedItem","interactiveItem","hoverItem","boxShadow","showPopup","options","dialog","Popup","launch","Widget","constructor","super","this","_body","body","addClass","_anchor","anchor","_align","align","layout","PanelLayout","addWidget","node","addEventListener","update","_setGeometry","document","removeClass","onUpdateRequest","msg","onAfterAttach","window","onAfterDetach","removeEventListener","onResize","dispose","handleEvent","event","type","_evtKeydown","_evtClick","target","contains","keyCode","stopPropagation","preventDefault","aligned","anchorRect","getBoundingClientRect","bodyRect","width","getComputedStyle","HoverBox","host","offset","horizontal","privilege","progressBarItem","border","borderRadius","overflow","fillerItem","ProgressBar","Filler","percentage","TextItem","title","source","KernelStatusComponent","trans","translator","nullTranslator","load","statusText","status","onClick","handleClick","kernelName","__","activityName","KernelStatus","VDomRenderer","opts","Model","_handleClick","render","model","VDomModel","_onKernelStatusChanged","_a","_kernelStatus","_sessionContext","kernelDisplayStatus","stateChanged","emit","_onKernelChanged","change","oldState","_getAllState","_kernelName","kernelDisplayName","_triggerChange","_activityName","_trans","_statusNames","unknown","starting","idle","busy","terminating","restarting","autorestarting","dead","connected","connecting","disconnected","initializing","undefined","val","sessionContext","_b","_c","statusChanged","disconnect","kernelChanged","connect","connectionStatusChanged","newState","JSONExt","lineFormSearch","padding","zIndex","lineFormCaption","marginTop","baseLineForm","position","backgroundSize","backgroundRepeat","backgroundPosition","outline","top","right","lineFormButtonDiv","lineFormButtonIcon","boxSizing","lineFormButton","lineFormWrapper","lineFormWrapperFocusWithin","lineFormInput","LineFormComponent","_handleChange","setState","value","currentTarget","_handleSubmit","parseInt","_textInput","isNaN","isFinite","maxLine","handleSubmit","_handleFocus","hasFocus","_handleBlur","state","componentDidMount","focus","name","onSubmit","noValidate","onChange","onFocus","onBlur","ref","input","lineFormIcon","elementPosition","LineColComponent","line","column","LineCol","_popup","ReactWidget","currentLine","editor","lineCount","setCursorPosition","RunningSessionsComponent","terminals","terminalIcon","left","stylesheet","sessions","kernelIcon","arguments","_onSelectionChanged","pos","getCursorPosition","_line","_column","_editor","oldEditor","selections","changed","RunningSessions","_serviceManager","serviceManager","runningChanged","_onSessionsRunningChanged","_onTerminalsRunningChanged","caption","manager","_terminals","_sessions","oldSessions","oldTerminals","Private","StatusBar","_leftRankItems","_rightRankItems","_statusItems","_disposables","DisposableSet","rootLayout","leftPanel","_leftSide","Panel","middlePanel","_middlePanel","rightPanel","_rightSide","registerStatusItem","id","statusItem","Error","fullStatusItem","statusItemDefaults","item","rank","onActiveStateChanged","_refreshItem","activeStateChanged","rankItem","insertIndex","_findInsertIndex","push","ArrayExt","insertWidget","disposable","DisposableDelegate","parent","add","_refreshAll","newItem","isActive","show","hide","keys","forEach","IStatusBar","Token"],"sourceRoot":""}