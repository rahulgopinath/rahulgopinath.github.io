{"version":3,"file":"89.a185670d817ec978df6d.js","mappings":"iOAOA,MAAMA,EAAY,sBAIX,MAAMC,UAAuB,EAAAC,OAChCC,cACIC,QACAC,KAAKC,SAAS,sBACdD,KAAKE,QAAUC,SAASC,cAAc,UACtCJ,KAAKK,KAAKC,YAAYN,KAAKE,SAK/B,kBAAkBK,GACd,IAAIC,EAAIC,EACJT,KAAKE,QAAQQ,YACbV,KAAKE,QAAQQ,WAAWC,YAAYX,KAAKE,SAE7C,MAAMU,EAAQ,IAAI,EAAAC,gBAClBb,KAAKE,QAAUC,SAASC,cAAc,UACtCJ,KAAKE,QAAQY,OAAS,KAClBF,EAAMG,aAAQ,IAElBf,KAAKK,KAAKC,YAAYN,KAAKE,eACrBU,EAAMI,QACZ,MAAMC,EAAOV,EAAMU,KAAKtB,GACxB,IAAKsB,IAASjB,KAAKE,QAAQgB,cACvB,OAEJ,MAAMC,EAAWZ,EAAMY,SAASxB,GAChCK,KAAKE,QAAQkB,MAAsF,QAA7EZ,EAAKW,MAAAA,OAA2C,EAASA,EAASC,aAA0B,IAAPZ,EAAgBA,EAAK,OAChIR,KAAKE,QAAQmB,OAAwF,QAA9EZ,EAAKU,MAAAA,OAA2C,EAASA,EAASE,cAA2B,IAAPZ,EAAgBA,EAAK,QAClIT,KAAKE,QAAQgB,cAAcf,SAASmB,MAAML,GAK9CM,UACIvB,KAAKE,QAAQsB,SACbzB,MAAMwB,WAMP,MAAME,EAAkB,CAC3BC,MAAM,EACNC,UAAW,CAAChC,GACZiC,YAAa,IACbC,eAAgBC,GAAW,IAAIlC,GAenC,EAbmB,CACf,CACImC,GAAI,wCACJN,gBAAAA,EACAO,SAAU,SACVC,6BAA8B,CAC1BC,KAAM,SACNC,gBAAiB,SACjBC,UAAW,CAAC,UACZC,WAAY,CAAC","sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../../packages/iframe-extension/lib/index.js"],"sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { PromiseDelegate } from '@lumino/coreutils';\nimport { Widget } from '@lumino/widgets';\n/**\n * The MIME type for IFrame.\n */\nconst MIME_TYPE = 'text/html-sandboxed';\n/**\n * A class for rendering an IFrame document.\n */\nexport class RenderedIFrame extends Widget {\n    constructor() {\n        super();\n        this.addClass('jp-IFrameContainer');\n        this._iframe = document.createElement('iframe');\n        this.node.appendChild(this._iframe);\n    }\n    /**\n     * Render the IFrame into this widget's node.\n     */\n    async renderModel(model) {\n        var _a, _b;\n        if (this._iframe.parentNode) {\n            this._iframe.parentNode.removeChild(this._iframe);\n        }\n        const ready = new PromiseDelegate();\n        this._iframe = document.createElement('iframe');\n        this._iframe.onload = () => {\n            ready.resolve(void 0);\n        };\n        this.node.appendChild(this._iframe);\n        await ready.promise;\n        const data = model.data[MIME_TYPE];\n        if (!data || !this._iframe.contentWindow) {\n            return;\n        }\n        const metadata = model.metadata[MIME_TYPE];\n        this._iframe.width = (_a = metadata === null || metadata === void 0 ? void 0 : metadata.width) !== null && _a !== void 0 ? _a : '100%';\n        this._iframe.height = (_b = metadata === null || metadata === void 0 ? void 0 : metadata.height) !== null && _b !== void 0 ? _b : '400px';\n        this._iframe.contentWindow.document.write(data);\n    }\n    /**\n     * Dispose of the resources held by the iframe widget.\n     */\n    dispose() {\n        this._iframe.remove();\n        super.dispose();\n    }\n}\n/**\n * A mime renderer factory for IFrame data.\n */\nexport const rendererFactory = {\n    safe: false,\n    mimeTypes: [MIME_TYPE],\n    defaultRank: 100,\n    createRenderer: options => new RenderedIFrame()\n};\nconst extensions = [\n    {\n        id: '@jupyterlite/iframe-extension:factory',\n        rendererFactory,\n        dataType: 'string',\n        documentWidgetFactoryOptions: {\n            name: 'IFrame',\n            primaryFileType: 'IFrame',\n            fileTypes: ['IFrame'],\n            defaultFor: ['IFrame']\n        }\n    }\n];\nexport default extensions;\n"],"names":["MIME_TYPE","RenderedIFrame","Widget","constructor","super","this","addClass","_iframe","document","createElement","node","appendChild","model","_a","_b","parentNode","removeChild","ready","PromiseDelegate","onload","resolve","promise","data","contentWindow","metadata","width","height","write","dispose","remove","rendererFactory","safe","mimeTypes","defaultRank","createRenderer","options","id","dataType","documentWidgetFactoryOptions","name","primaryFileType","fileTypes","defaultFor"],"sourceRoot":""}